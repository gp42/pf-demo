apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "blacklister.fullname" . }}
  labels:
    app.kubernetes.io/component: blacklister
    {{- include "blacklister.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "blacklister.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/component: blacklister
        {{- include "blacklister.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "blacklister.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.dbName }}-{{ .Values.schemaName }}-writer-user.ops-{{ include "blacklister.fullname" . }}-db.credentials.postgresql.acid.zalan.do
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.dbName }}-{{ .Values.schemaName }}-writer-user.ops-{{ include "blacklister.fullname" . }}-db.credentials.postgresql.acid.zalan.do
                key: password
          - name: DB_HOST
            value: 'ops-{{ include "blacklister.fullname" . }}-db'
          - name: DB_NAME
            value: '{{ .Values.dbName }}'
          - name: LOG_LEVEL
            value: '{{ .Values.logLevel }}'
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
